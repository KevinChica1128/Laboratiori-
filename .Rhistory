#Ingresamos los datos y conformamos la matriz
planta<-c(1,2,3,4,5,6,7,8,9,10)
x1<-c(1.89,1.92,1.95,2.11,1.78,2.12,2.06,2.19,1.93,1.84)
x2<-c(53,62,71,75,58,77,82,78,60,72)
x3<-c(4.5,5.2,5.4,6.1,5,6.5,7.6,7.3,5.5,5.7)
x4<-c(120,136,145,156,127,160,169,164,142,147)
x<-matrix(c(x1,x2,x3,x4),10,4)
x
colnames(x)<-c("Altura planta","Longitud radicular","Área foliar","Peso pulpa")
x
g<-c(mean(x1),mean(x2),mean(x3),mean(x4))
g
x[i,]-g
x[1,]-g
sum(x[i,]-g)
#Inercia con los datos originales
I<-(1/n)*sum(x[,]-g)
#Inercia con los datos originales
I<-(1/10)*sum(x[,]-g)
I
sum(x[,]-g)
#Inercia con los datos originales
for (i in 1:10) {
I<-(1/10)*sum((x[i,]-g)%*%t((x[i,]-g)))
}
I
(x[1,]-g)
t((x[1,]-g))
(x[1,]-g)%*%t((x[1,]-g))
t(x[1,]-g)%*%(x[1,]-g)
#Inercia con los datos originales
for (i in 1:10) {
I<-(1/10)*sum(t(x[i,]-g)%*%(x[i,]-g))
}
I
t(x[1,]-g)%*%(x[1,]-g)
(1/10)*(t(x[1,]-g)%*%(x[1,]-g)+(t(x[2,]-g)%*%(x[2,]-g))+(t(x[3,]-g)%*%(x[3,]-g))+
(t(x[4,]-g)%*%(x[4,]-g))+(t(x[5,]-g)%*%(x[5,]-g))+(t(x[6,]-g)%*%(x[6,]-g))+
(t(x[7,]-g)%*%(x[7,]-g))+(t(x[7,]-g)%*%(x[7,]-g))+(t(x[8,]-g)%*%(x[8,]-g))+(t(x[9,]-g)%*%(x[9,]-g))
+(t(x[10,]-g)%*%(x[10,]-g)))
sum(t(x[i,]-g)%*%(x[i,]-g))
t(x[1,]-g)%*%(x[1,]-g)+(t(x[2,]-g)%*%(x[2,]-g))+(t(x[3,]-g)%*%(x[3,]-g))+
(t(x[4,]-g)%*%(x[4,]-g))+(t(x[5,]-g)%*%(x[5,]-g))+(t(x[6,]-g)%*%(x[6,]-g))+
(t(x[7,]-g)%*%(x[7,]-g))+(t(x[7,]-g)%*%(x[7,]-g))+(t(x[8,]-g)%*%(x[8,]-g))+(t(x[9,]-g)%*%(x[9,]-g))
+(t(x[10,]-g)%*%(x[10,]-g)
#Inercia con los datos originales
for (i in 1:10) {
I<-sum((1/10)(t(x[i,]-g)%*%(x[i,]-g)))
}
#Inercia con los datos originales
for (i in 1:10) {
I<-sum((1/10)(t(x[i,]-g)%*%(x[i,]-g)))
}
#Inercia con los datos originales
for (i in 1:10) {
I<-sum((1/10)*(t(x[i,]-g)%*%(x[i,]-g)))
}
I
t(x[1,]-g)%*%(x[1,]-g))
t(x[1,]-g)%*%(x[1,]-g)
g
x
x[1,]-g
t(x[1,]-g)%*%(x[1,]-g)
((1/10)*(t(x[1,]-g)%*%(x[1,]-g)))+((1/10)*(t(x[2,]-g)%*%(x[2,]-g)))+((1/10)*(t(x[3,]-g)%*%(x[3,]-g)))
+((1/10)*(t(x[4,]-g)%*%(x[4,]-g)))+((1/10)*(t(x[5,]-g)%*%(x[5,]-g)))+((1/10)*(t(x[6,]-g)%*%(x[6,]-g)))+
((1/10)*(t(x[7,]-g)%*%(x[7,]-g)))+((1/10)*(t(x[8,]-g)%*%(x[8,]-g)))+((1/10)*(t(x[9,]-g)%*%(x[9,]-g)))
+((1/10)*(t(x[10,]-g)%*%(x[10,]-g)))
((1/10)*(t(x[1,]-g)%*%(x[1,]-g)))+((1/10)*(t(x[2,]-g)%*%(x[2,]-g)))+((1/10)*(t(x[3,]-g)%*%(x[3,]-g)))
((1/10)*(t(x[1,]-g)%*%(x[1,]-g)))+((1/10)*(t(x[2,]-g)%*%(x[2,]-g)))+((1/10)*(t(x[3,]-g)%*%(x[3,]-g)))
+((1/10)*(t(x[4,]-g)%*%(x[4,]-g)))+((1/10)*(t(x[5,]-g)%*%(x[5,]-g)))+((1/10)*(t(x[6,]-g)%*%(x[6,]-g)))+
((1/10)*(t(x[7,]-g)%*%(x[7,]-g)))+((1/10)*(t(x[8,]-g)%*%(x[8,]-g)))+((1/10)*(t(x[9,]-g)%*%(x[9,]-g)))
+((1/10)*(t(x[10,]-g)%*%(x[10,]-g)))
((1/10)*(t(x[1,]-g)%*%(x[1,]-g)))+((1/10)*(t(x[2,]-g)%*%(x[2,]-g)))+((1/10)*(t(x[3,]-g)%*%(x[3,]-g)))
+((1/10)*(t(x[4,]-g)%*%(x[4,]-g)))+((1/10)*(t(x[5,]-g)%*%(x[5,]-g)))+((1/10)*(t(x[6,]-g)%*%(x[6,]-g)))+
((1/10)*(t(x[7,]-g)%*%(x[7,]-g)))+((1/10)*(t(x[8,]-g)%*%(x[8,]-g)))+((1/10)*(t(x[9,]-g)%*%(x[9,]-g)))+((1/10)*(t(x[10,]-g)%*%(x[10,]-g)))
((1/10)*(t(x[1,]-g)%*%(x[1,]-g)))+((1/10)*(t(x[2,]-g)%*%(x[2,]-g)))+((1/10)*(t(x[3,]-g)%*%(x[3,]-g)))
+((1/10)*(t(x[4,]-g)%*%(x[4,]-g)))+((1/10)*(t(x[5,]-g)%*%(x[5,]-g)))+((1/10)*(t(x[6,]-g)%*%(x[6,]-g)))+
((1/10)*(t(x[7,]-g)%*%(x[7,]-g)))+((1/10)*(t(x[8,]-g)%*%(x[8,]-g)))+((1/10)*(t(x[9,]-g)%*%(x[9,]-g)))+((1/10)*(t(x[10,]-g)%*%(x[10,]-g)))
(((1/10)*(t(x[1,]-g)%*%(x[1,]-g)))+((1/10)*(t(x[2,]-g)%*%(x[2,]-g)))+((1/10)*(t(x[3,]-g)%*%(x[3,]-g)))+
((1/10)*(t(x[4,]-g)%*%(x[4,]-g)))+((1/10)*(t(x[5,]-g)%*%(x[5,]-g)))+((1/10)*(t(x[6,]-g)%*%(x[6,]-g)))+
((1/10)*(t(x[7,]-g)%*%(x[7,]-g)))+((1/10)*(t(x[8,]-g)%*%(x[8,]-g)))+((1/10)*(t(x[9,]-g)%*%(x[9,]-g)))+((1/10)*(t(x[10,]-g)%*%(x[10,]-g))))
t(x[i,]-g)%*%(x[i,]-g)
i
x
g
(1/10)*(t(x[1,]-g)%*%(x[1,]-g))+(1/10)*(t(x[2,]-g)%*%(x[2,]-g))+(1/10)*(t(x[3,]-g)%*%(x[3,]-g))+
(1/10)*(t(x[4,]-g)%*%(x[4,]-g))+(1/10)*(t(x[5,]-g)%*%(x[5,]-g))+(1/10)*(t(x[6,]-g)%*%(x[6,]-g))+
(1/10)*(t(x[7,]-g)%*%(x[7,]-g))+(1/10)*(t(x[8,]-g)%*%(x[8,]-g))+(1/10)*(t(x[9,]-g)%*%(x[9,]-g))+(1/10)*(t(x[10,]-g)%*%(x[10,]-g))
(1/10)*((t(x[1,]-g)%*%(x[1,]-g))+(t(x[2,]-g)%*%(x[2,]-g))+(t(x[3,]-g)%*%(x[3,]-g))+
(t(x[4,]-g)%*%(x[4,]-g))+(t(x[5,]-g)%*%(x[5,]-g))+(t(x[6,]-g)%*%(x[6,]-g))+
(t(x[7,]-g)%*%(x[7,]-g))+(t(x[8,]-g)%*%(x[8,]-g))+(t(x[9,]-g)%*%(x[9,]-g))+(t(x[10,]-g)%*%(x[10,]-g)))
#Inercia con los datos originales
for (i in 1:10) {
I<-sum((1/10)*(t(x[i,]-g)%*%(x[i,]-g)))
}
I
((t(x[1,]-g)%*%(x[1,]-g))+(t(x[2,]-g)%*%(x[2,]-g))+(t(x[3,]-g)%*%(x[3,]-g))+
(t(x[4,]-g)%*%(x[4,]-g))+(t(x[5,]-g)%*%(x[5,]-g))+(t(x[6,]-g)%*%(x[6,]-g))+
(t(x[7,]-g)%*%(x[7,]-g))+(t(x[8,]-g)%*%(x[8,]-g))+(t(x[9,]-g)%*%(x[9,]-g))+(t(x[10,]-g)%*%(x[10,]-g)))
#Inercia con los datos originales
for (i in 1:10) {
I<-sum((t(x[i,]-g)%*%(x[i,]-g)))
}
I
t(x[1,]-g)%*%(x[1,]-g))
t(x[1,]-g)%*%(x[1,]-g)
#Inercia con los datos originales
for (i in 1:10) {
I<-sum(t(x[i,]-g)%*%(x[i,]-g))
}
I
#Inercia con los datos originales
for (i in 1:10) {
I<-sum((t(x[i,]-g))%*%(x[i,]-g))
}
I
1:10
(1/10)*((t(x[1,]-g)%*%(x[1,]-g))+(t(x[2,]-g)%*%(x[2,]-g))+(t(x[3,]-g)%*%(x[3,]-g))+
(t(x[4,]-g)%*%(x[4,]-g))+(t(x[5,]-g)%*%(x[5,]-g))+(t(x[6,]-g)%*%(x[6,]-g))+
(t(x[7,]-g)%*%(x[7,]-g))+(t(x[8,]-g)%*%(x[8,]-g))+(t(x[9,]-g)%*%(x[9,]-g))+(t(x[10,]-g)%*%(x[10,]-g)))
(1/10)*(t(x[1,]-g)%*%(x[1,]-g))+(1/10)*(t(x[2,]-g)%*%(x[2,]-g))+(1/10)*(t(x[3,]-g)%*%(x[3,]-g))+
(1/10)*(t(x[4,]-g)%*%(x[4,]-g))+(1/10)*(t(x[5,]-g)%*%(x[5,]-g))+(1/10)*(t(x[6,]-g)%*%(x[6,]-g))+
(1/10)*(t(x[7,]-g)%*%(x[7,]-g))+(1/10)*(t(x[8,]-g)%*%(x[8,]-g))+(1/10)*(t(x[9,]-g)%*%(x[9,]-g))+(1/10)*(t(x[10,]-g)%*%(x[10,]-g))
#Inercia con los datos originales
for (i in 1:10) {
I<-sum((t(x[i,]-g))%*%(x[i,]-g))
}
t(x[1,]-g)%*%(x[1,]-g)
t(x[i,]-g)
x[i,]-g
i
x
g
(t(x[i,]-g))%*%(x[i,]-g)
t(x[10,]-g)%*%(x[10,]-g)
#Inercia con los datos originales
for (i in 1:10) {
I<-c((t(x[i,]-g))%*%(x[i,]-g))
}
I
#Inercia con los datos originales
for (i in 1:10) {
I[i]<-c((t(x[i,]-g))%*%(x[i,]-g))
}
I
sum(I)
#Inercia con los datos originales
for (i in 1:10) {
S[i]<-c((t(x[i,]-g))%*%(x[i,]-g))
}
I=sum(S)/10
#Inercia con los datos originales
S<-c()
for (i in 1:10) {
S[i]<-c((t(x[i,]-g))%*%(x[i,]-g))
}
I=sum(S)/10
I
(1/10)*((t(x[1,]-g)%*%(x[1,]-g))+(t(x[2,]-g)%*%(x[2,]-g))+(t(x[3,]-g)%*%(x[3,]-g))+
(t(x[4,]-g)%*%(x[4,]-g))+(t(x[5,]-g)%*%(x[5,]-g))+(t(x[6,]-g)%*%(x[6,]-g))+
(t(x[7,]-g)%*%(x[7,]-g))+(t(x[8,]-g)%*%(x[8,]-g))+(t(x[9,]-g)%*%(x[9,]-g))+(t(x[10,]-g)%*%(x[10,]-g)))
#Inercia con datos centrados
#Centramos datos
X1<-x1-mean(x1)
X1
#Inercia con datos centrados
#Centramos datos
X1<-(x1-mean(x1))
X2<-(x2-mean(x2))
X3<-(x3-mean(x3))
X4<-(x4-mean(x4))
X<-matrix(c(X1,X2,X3,X4),10,4)
colnames(X)<-c("Altura planta","Longitud radicular","Área foliar","Peso pulpa")
g<-c(mean(x1),mean(x2),mean(x3),mean(x4)) #Individuo (Planta) Promedio
g<-c(mean(x1),mean(x2),mean(x3),mean(x4)) #Individuo (Planta) Promedio
g
G<-c(mean(X1),mean(X2),mean(X3),mean(X4)) #Individuo (Planta) Promedio
G
i<-sum(S)/10 #Inercia
i
#Ingresamos los datos y conformamos la matriz
planta<-c(1,2,3,4,5,6,7,8,9,10)
x1<-c(1.89,1.92,1.95,2.11,1.78,2.12,2.06,2.19,1.93,1.84)
x2<-c(53,62,71,75,58,77,82,78,60,72)
x3<-c(4.5,5.2,5.4,6.1,5,6.5,7.6,7.3,5.5,5.7)
x4<-c(120,136,145,156,127,160,169,164,142,147)
x<-matrix(c(x1,x2,x3,x4),10,4)
colnames(x)<-c("Altura planta","Longitud radicular","Área foliar","Peso pulpa")
g<-c(mean(x1),mean(x2),mean(x3),mean(x4)) #Individuo (Planta) Promedio
#Inercia con los datos originales
s<-c()
for (i in 1:10) {
s[i]<-c((t(x[i,]-g))%*%(x[i,]-g))
}
i<-sum(s)/10 #Inercia
i
#Inercia con datos centrados
#Centramos datos
X1<-(x1-mean(x1))
X2<-(x2-mean(x2))
X3<-(x3-mean(x3))
X4<-(x4-mean(x4))
X<-matrix(c(X1,X2,X3,X4),10,4)
colnames(X)<-c("Altura planta","Longitud radicular","Área foliar","Peso pulpa")
G<-c(mean(X1),mean(X2),mean(X3),mean(X4)) #Individuo (Planta) Promedio
S<-c()
for (i in 1:10) {
S[i]<-c((t(X[i,]-G))%*%(X[i,]-G))
}
I<-sum(S)/10 #Inercia
I
#Ingresamos los datos y conformamos la matriz
planta<-c(1,2,3,4,5,6,7,8,9,10)
x1<-c(1.89,1.92,1.95,2.11,1.78,2.12,2.06,2.19,1.93,1.84)
x2<-c(53,62,71,75,58,77,82,78,60,72)
x3<-c(4.5,5.2,5.4,6.1,5,6.5,7.6,7.3,5.5,5.7)
x4<-c(120,136,145,156,127,160,169,164,142,147)
x<-matrix(c(x1,x2,x3,x4),10,4)
colnames(x)<-c("Altura planta","Longitud radicular","Área foliar","Peso pulpa")
g<-c(mean(x1),mean(x2),mean(x3),mean(x4)) #Individuo (Planta) Promedio
#Inercia con los datos originales
s<-c()
for (i in 1:10) {
s[i]<-c((t(x[i,]-g))%*%(x[i,]-g))
}
sum(s)
ine<-sum(s)/10 #Inercia
ine
#Inercia con datos centrados
#Centramos datos
X1<-(x1-mean(x1))
X2<-(x2-mean(x2))
X3<-(x3-mean(x3))
X4<-(x4-mean(x4))
X<-matrix(c(X1,X2,X3,X4),10,4)
colnames(X)<-c("Altura planta","Longitud radicular","Área foliar","Peso pulpa")
G<-c(mean(X1),mean(X2),mean(X3),mean(X4)) #Planta Promedio (Origen por datos centrados)
G
S<-c()
for (i in 1:10) {
S[i]<-c((t(X[i,]-G))%*%(X[i,]-G))
}
sum(S)
In<-sum(S)/10 #Inercia
In
#Función desviación estandar sobre n:
sd2 <- function (x) {
sqrt(sum((x - mean(x))^2) / (length(x)))
}
#--------------------------------------------------------------------------#
#Punto 2:
#Estandarización:
z1 <- (x1 - mean(x1))/sd2(x1)
z2 <- (x2 - mean(x2))/sd2(x2)
z3 <- (x3 - mean(x3))/sd2(x3)
z4 <- (x4 - mean(x4))/sd2(x4)
z1
z2
Z <- matrix(c(z1,z2,z3,z4),10,4)
Z
gs<-c(mean(z1),mean(z2),mean(z3),mean(z4)) #Punto de gravedad con datos estandarizados
gs
#Inercia con los datos originales
ss<-c()
for (i in 1:10) {
ss[i]<-c((t(Z[i,]-gs))%*%(Z[i,]-gs))
}
Is<-sum(ss)/10 #Inercia
Is
#Matriz de varianzas y covarianzas
cov(x)
var(x1)
cov(x1,x2)
#Matriz de correlaciones
cor(x)
#Matriz de varianzas y covarianzas
V<-cov(x)
#Matriz de correlaciones
R<-cor(x)
dv <- eigen(V) ## Valores y Vectores propios
dv
#Matriz de correlaciones:
dvR <- eigen(R)  # Valores y Vectores propios de R
uR <- dvR$vectors
lR <- dvR$values
u <- dv$vectors
l <- dv$values
dvR
dv
#------------------------------------------------------------------------#
#punto 9:
install.packages("scatterplot3d")
library(scatterplot3d)
X11()
scatterplot3d(x1,x2,x3,angle = 40,xlab = "altura planta",ylab = "longitud radicular",zlab = "area foliar")
X11()
scatterplot3d(x1,x2,x3,angle = 120,xlab = "altura planta",ylab = "longitud radicular",zlab = "area foliar")
X11()
scatterplot3d(x1,x2,x3,angle = 200,xlab = "altura planta",ylab = "longitud radicular",zlab = "area foliar")
#-------------------------------------------------------------------------#
#punto 8:
t<-x%*%u
T<-X%*%u
Tz<-Z%*%uR
Tz
x11()
plot(t[,1],t[,2])
text(t[,1],t[,2]+0.1,c(1,2,3,4,5,6,7,8,9,10))
x11()
plot(T[,1],T[,2])
text(T[,1],T[,2]+0.3,c(1,2,3,4,5,6,7,8,9,10))
x11()
plot(T[,1],T[,2])
text(T[,1],T[,2]+0.2,c(1,2,3,4,5,6,7,8,9,10))
x11()
plot(Tz[,1],Tz[,2])
text(Tz[,1],Tz[,2]+0.2,c(1,2,3,4,5,6,7,8,9,10))
x11()
plot(Tz[,1],Tz[,2])
text(Tz[,1],Tz[,2]+0.05,c(1,2,3,4,5,6,7,8,9,10))
x11()
plot(T[,1],T[,2])
text(T[,1],T[,2]+0.2,c(1,2,3,4,5,6,7,8,9,10))
x11()
plot(T[,1],T[,2])
text(T[,1],T[,2]+0.25,c(1,2,3,4,5,6,7,8,9,10))
x11()
plot(t[,1],t[,2])
text(t[,1],t[,2]+0.2,c(1,2,3,4,5,6,7,8,9,10))
x11()
plot(t[,1],t[,2])
text(t[,1],t[,2]+0.22,c(1,2,3,4,5,6,7,8,9,10))
X11()
scatterplot3d(t[,1],t[,2],t[,3])
X11()
scatterplot3d(T[,1],T[,2],T[,3])
X11()
scatterplot3d(Tz[,1],Tz[,2],Tz[,3])
X11()
scatterplot3d(proyec1[,1],proyec1[,2],proyec1[,3],xlab = "componente 1",ylab = "componente 2",zlab = "componente 3")
X11()
scatterplot3d(t[,1],t[,2],t[,3],xlab = "componente 1",ylab = "componente 2",zlab = "componente 3")
X11()
scatterplot3d(t[,1],t[,2],t[,3],xlab = "componente 1",ylab = "componente 2",zlab = "componente 3")
In<-sum(S)/10 #Inercia
In
Is
var(x1)+var(x2)+var(x3)+var(x4)
In
(sd2(x1))^2+(sd2(x2))^2+(sd2(x3))^2+(sd2(x4))^2
X11()
scatterplot3d(t[,1],t[,2],t[,3],xlab = "componente 1",ylab = "componente 2",zlab = "componente 3")
g
ine
X
G
Is
In
ine
#Ingresamos los datos y conformamos la matriz
planta<-c(1,2,3,4,5,6,7,8,9,10)
x1<-c(1.89,1.92,1.95,2.11,1.78,2.12,2.06,2.19,1.93,1.84)
x2<-c(53,62,71,75,58,77,82,78,60,72)
x3<-c(4.5,5.2,5.4,6.1,5,6.5,7.6,7.3,5.5,5.7)
x4<-c(120,136,145,156,127,160,169,164,142,147)
x<-matrix(c(x1,x2,x3,x4),10,4)
colnames(x)<-c("Altura planta","Longitud radicular","Área foliar","Peso pulpa")
#Función desviación estandar sobre n:
sd2 <- function (x) {
sqrt(sum((x - mean(x))^2) / (length(x)))
}
g<-c(mean(x1),mean(x2),mean(x3),mean(x4)) #Individuo (Planta) Promedio
#Inercia con los datos originales
s<-c()
for (i in 1:10) {
s[i]<-c((t(x[i,]-g))%*%(x[i,]-g))
}
ine<-sum(s)/10 #Inercia
ine
#Inercia con datos centrados
#Centramos datos
X1<-(x1-mean(x1))
X2<-(x2-mean(x2))
X3<-(x3-mean(x3))
X4<-(x4-mean(x4))
X<-matrix(c(X1,X2,X3,X4),10,4)
colnames(X)<-c("Altura planta","Longitud radicular","Área foliar","Peso pulpa")
G<-c(mean(X1),mean(X2),mean(X3),mean(X4)) #Planta Promedio (Origen por datos centrados)
S<-c()
for (i in 1:10) {
S[i]<-c((t(X[i,]-G))%*%(X[i,]-G))
}
In<-sum(S)/10 #Inercia
In
gs
#Matriz de varianzas y covarianzas
V<-cov(x)
V
R
dv
3.483709e+02
8.000646e-02
5.602631e-03
dvR
u
t
X11()
scatterplot3d(x1,x2,x3,angle = 40,xlab = "altura planta",ylab = "longitud radicular",zlab = "area foliar")
X11()
scatterplot3d(x1,x2,x3,angle = 40,xlab = "altura planta",ylab = "longitud radicular",zlab = "area foliar")
X11()
scatterplot3d(x1,x2,x3,angle = 40,xlab = "altura planta",ylab = "longitud radicular",zlab = "area foliar")
text(t[,1],t[,2]+0.22,c(1,2,3,4,5,6,7,8,9,10))
X11()
scatterplot3d(x1,x2,x3,angle = 40,xlab = "altura planta",ylab = "longitud radicular",zlab = "area foliar")
text(x1,x2,x2,c(1,2,3,4,5,6,7,8,9,10))
X11()
par(mfrow=c(3,1))
scatterplot3d(x1,x2,x3,angle = 40,xlab = "altura planta",ylab = "longitud radicular",zlab = "area foliar")
scatterplot3d(x1,x2,x3,angle = 120,xlab = "altura planta",ylab = "longitud radicular",zlab = "area foliar")
scatterplot3d(x1,x2,x3,angle = 200,xlab = "altura planta",ylab = "longitud radicular",zlab = "area foliar")
X11()
par(mfrow=c(1,3))
scatterplot3d(x1,x2,x3,angle = 40,xlab = "altura planta",ylab = "longitud radicular",zlab = "area foliar")
scatterplot3d(x1,x2,x3,angle = 120,xlab = "altura planta",ylab = "longitud radicular",zlab = "area foliar")
scatterplot3d(x1,x2,x3,angle = 200,xlab = "altura planta",ylab = "longitud radicular",zlab = "area foliar")
X11()
scatterplot3d(x1,x2,x3,angle = 40,axis=T,xlab = "altura planta",ylab = "longitud radicular",zlab = "area foliar")
X11()
scatterplot3d(x1,x2,x3,angle = 40,axis=T,tick.marks = T,xlab = "altura planta",ylab = "longitud radicular",zlab = "area foliar")
X11()
scatterplot3d(x1,x2,x3,angle = 0,axis=T,tick.marks = T,xlab = "altura planta",ylab = "longitud radicular",zlab = "area foliar")
X11()
scatterplot3d(x1,x2,x3,angle = 20,axis=T,tick.marks = T,xlab = "altura planta",ylab = "longitud radicular",zlab = "area foliar")
X11()
scatterplot3d(x1,x2,x3,angle = 40,axis=T,tick.marks = T,xlab = "altura planta",ylab = "longitud radicular",zlab = "area foliar")
X11()
scatterplot3d(x1,x2,x3,angle = 40,axis=T,tick.marks = T,label.tick.marks=T,xlab = "altura planta",ylab = "longitud radicular",zlab = "area foliar")
X11()
scatterplot3d(x1,x2,x3,angle = 40,axis=T,tick.marks = T,x.ticklabs=c(1:10),label.tick.marks=T,xlab = "altura planta",ylab = "longitud radicular",zlab = "area foliar")
x11()
plot(t[,1],t[,2])
text(t[,1],t[,2]+0.22,c(1,2,3,4,5,6,7,8,9,10))
x11()
plot(t[,1],t[,2])
text(t[,1],t[,2]+0.22,c(1,2,3,4,5,6,7,8,9,10))
x11()
plot(t[,1],t[,2],xlab = "Componente 1", ylab = "Componente 2")
text(t[,1],t[,2]+0.22,c(1,2,3,4,5,6,7,8,9,10))
x11()
plot(t[,1],t[,2],xlab = "Componente 1", ylab = "Componente 2",main = "Gráfico de las proyecciones de la matriz de datos originales usando dos componentes")
text(t[,1],t[,2]+0.22,c(1,2,3,4,5,6,7,8,9,10))
x11()
plot(T[,1],T[,2],xlab = "Componente 1", ylab = "Componente 2",main = "Gráfico de las proyecciones de la matriz de datos centrados usando dos componentes")
text(T[,1],T[,2]+0.25,c(1,2,3,4,5,6,7,8,9,10))
x11()
plot(t[,1],t[,2],xlab = "Componente 1", ylab = "Componente 2",main = "Gráfico de las proyecciones de la matriz de datos originales usando dos componentes")
text(t[,1],t[,2]+0.22,c(1,2,3,4,5,6,7,8,9,10))
x11()
plot(T[,1],T[,2],xlab = "Componente 1", ylab = "Componente 2",main = "Gráfico de las proyecciones de la matriz de datos centrados usando dos componentes")
text(T[,1],T[,2]+0.25,c(1,2,3,4,5,6,7,8,9,10))
x11()
plot(Tz[,1],Tz[,2],xlab = "Componente 1", ylab = "Componente 2",main = "Gráfico de las proyecciones de la matriz de datos estandarizados usando dos componentes")
text(Tz[,1],Tz[,2]+0.05,c(1,2,3,4,5,6,7,8,9,10))
X11()
scatterplot3d(t[,1],t[,2],t[,3],xlab = "Componente 1",ylab = "Componente 2",zlab = "Componente 3")
Is
library(scatterplot3d)
X11()
scatterplot3d(x1,x2,x3,angle = 40,xlab = "altura planta",ylab = "longitud radicular",zlab = "area foliar")
Tz
X11()
scatterplot3d(x1,x2,x3,angle = 40,xlab = "altura planta",ylab = "longitud radicular",zlab = "area foliar")
library(scatterplot3d)
X11()
scatterplot3d(x1,x2,x3,angle = 40,xlab = "altura planta",ylab = "longitud radicular",zlab = "area foliar")
X11()
scatterplot3d(x1,x2,x3,angle = 120,xlab = "altura planta",ylab = "longitud radicular",zlab = "area foliar")
X11()
scatterplot3d(x1,x2,x3,angle = 120,xlab = "altura planta",ylab = "longitud radicular",zlab = "area foliar")
X11()
scatterplot3d(x1,x2,x3,angle = 200,xlab = "altura planta",ylab = "longitud radicular",zlab = "area foliar")
X11()
scatterplot3d(x1,x2,x3,angle = 40,xlab = "altura planta",ylab = "longitud radicular",zlab = "area foliar")
x11()
scatterplot3d(z1,z2,z3,angle = 40,xlab = "altura planta",ylab = "longitud radicular",zlab = "area foliar")
X11()
scatterplot3d(t[,1],t[,2],t[,3],xlab = "Componente 1",ylab = "Componente 2",zlab = "Componente 3")
X11()
scatterplot3d(Tz[,1],Tz[,2],Tz[,3],xlab = "Componente 1",ylab = "Componente 2",zlab = "Componente 3")
l
lR
sum(l)
3.483709e+02/353.2353
sum(lR)
3.59564465/4
Z[1,]
uR
uR[,1]
Z[1,]%*%uR[,1]
Tz
x11()
plot(Tz[,1],Tz[,2],xlab = "Componente 1", ylab = "Componente 2",main = "Gráfico de las proyecciones de la matriz de datos estandarizados usando dos componentes")
text(Tz[,1],Tz[,2]+0.05,c(1,2,3,4,5,6,7,8,9,10))
